---
# Step 1: Create ArgoCD Secret (single source of truth)
apiVersion: v1
kind: Secret
metadata:
  name: azure-creds
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: argocd
type: Opaque
stringData:
  client-id: "your-azure-client-id"
  client-secret: "your-azure-client-secret"
  tenant-id: "your-azure-tenant-id"

---
# Step 2: ArgoCD Application - Deploy to multiple namespaces
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: azure-secrets-multi-ns
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/your-repo.git
    targetRevision: main
    path: k8s/azure-secrets
    helm:
      parameters:
      - name: azure.clientId
        value: $azure-creds:client-id
      - name: azure.clientSecret
        value: $azure-creds:client-secret
      - name: azure.tenantId
        value: $azure-creds:tenant-id
      # Define target namespaces
      - name: namespaces
        value: "default,dev,staging,production"
  destination:
    server: https://kubernetes.default.svc
    namespace: default  # This will be overridden by the template
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

---
# Chart.yaml
# Store in Git: k8s/azure-secrets/Chart.yaml
apiVersion: v2
name: azure-secrets
description: Azure credentials for multiple namespaces
type: application
version: 1.0.0

---
# values.yaml
# Store in Git: k8s/azure-secrets/values.yaml
azure:
  clientId: ""
  clientSecret: ""
  tenantId: ""

# List of namespaces to deploy secrets to
namespaces: "default,dev,staging,production"

---
# templates/namespaces.yaml
# Store in Git: k8s/azure-secrets/templates/namespaces.yaml
# Create namespaces if they don't exist
{{- range split "," .Values.namespaces }}
---
apiVersion: v1
kind: Namespace
metadata:
  name: {{ . | trim }}
{{- end }}

---
# templates/secrets.yaml
# Store in Git: k8s/azure-secrets/templates/secrets.yaml
# Create secret in each namespace
{{- range split "," .Values.namespaces }}
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-credentials
  namespace: {{ . | trim }}
  labels:
    app: azure-integration
type: Opaque
stringData:
  AZURE_CLIENT_ID: {{ $.Values.azure.clientId | quote }}
  AZURE_CLIENT_SECRET: {{ $.Values.azure.clientSecret | quote }}
  AZURE_TENANT_ID: {{ $.Values.azure.tenantId | quote }}
{{- end }}

---
# templates/deployment-example.yaml
# Store in Git: k8s/azure-secrets/templates/deployment-example.yaml
# Example: Deploy app to each namespace
{{- range split "," .Values.namespaces }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-app
  namespace: {{ . | trim }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: azure-app
  template:
    metadata:
      labels:
        app: azure-app
    spec:
      containers:
      - name: app
        image: myapp:latest
        env:
        - name: AZURE_CLIENT_ID
          valueFrom:
            secretKeyRef:
              name: azure-credentials
              key: AZURE_CLIENT_ID
        - name: AZURE_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: azure-credentials
              key: AZURE_CLIENT_SECRET
        - name: AZURE_TENANT_ID
          valueFrom:
            secretKeyRef:
              name: azure-credentials
              key: AZURE_TENANT_ID
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
{{- end }}

---
# Alternative Method: Separate Applications per Namespace
# Application for dev namespace
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: azure-secrets-dev
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/your-repo.git
    targetRevision: main
    path: k8s/azure-secrets-single
    helm:
      parameters:
      - name: azure.clientId
        value: $azure-creds:client-id
      - name: azure.clientSecret
        value: $azure-creds:client-secret
      - name: azure.tenantId
        value: $azure-creds:tenant-id
      - name: targetNamespace
        value: "dev"
  destination:
    server: https://kubernetes.default.svc
    namespace: dev
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

---
# Application for staging namespace
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: azure-secrets-staging
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/your-repo.git
    targetRevision: main
    path: k8s/azure-secrets-single
    helm:
      parameters:
      - name: azure.clientId
        value: $azure-creds:client-id
      - name: azure.clientSecret
        value: $azure-creds:client-secret
      - name: azure.tenantId
        value: $azure-creds:tenant-id
      - name: targetNamespace
        value: "staging"
  destination:
    server: https://kubernetes.default.svc
    namespace: staging
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true

---
# Application for production namespace
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: azure-secrets-prod
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://github.com/your-org/your-repo.git
    targetRevision: main
    path: k8s/azure-secrets-single
    helm:
      parameters:
      - name: azure.clientId
        value: $azure-creds:client-id
      - name: azure.clientSecret
        value: $azure-creds:client-secret
      - name: azure.tenantId
        value: $azure-creds:tenant-id
      - name: targetNamespace
        value: "production"
  destination:
    server: https://kubernetes.default.svc
    namespace: production
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
