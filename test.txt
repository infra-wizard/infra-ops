name: Polaris SAST Scan with Bridge CLI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  polaris-scan:
    runs-on: ubuntu-latest
    
    container:
      image: your-registry/coverity-ubuntu:latest
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Create Coverity Configuration for Bridge CLI
      run: |
        # Create coverity.yaml for Bridge CLI + Polaris
        cat > coverity.yaml << 'EOF'
        # Coverity configuration file for Bridge CLI
        # Schema: <install-dir>/doc/configuration-schema.json
        capture:
          build:
            clean-command: "make clean"
            build-command: "make -j $(nproc)"
            
          # Language configuration (optional)
          languages:
            include:
              - c-family
              - java
            # exclude:
            #   - python
            
          # Encoding for source files
          encoding: "UTF-8"
            
        # Compiler configuration for C/C++ projects
        compiler-configuration:
          cov-configure:
            # Standard GCC compilers
            - [ --template, --compiler, gcc, --comptype, gcc ]
            - [ --template, --compiler, g++, --comptype, g++ ]
            
            # Cross-compilers (if needed)
            - [ --template, --compiler, arm-linux-gnueabi-gcc, --comptype, gcc ]
            - [ --template, --compiler, arm-linux-gnueabi-g++, --comptype, g++ ]
            
            # Specific GCC versions
            - [ --template, --compiler, gcc-11, --comptype, gcc ]
            - [ --template, --compiler, g++-11, --comptype, g++ ]
            
            # Custom compiler with flags
            - [ --template, --compiler, gcc, --comptype, gcc, --, -std=c++17, -Wall ]
        EOF
        
        echo "=== Created coverity.yaml for Bridge CLI ==="
        cat coverity.yaml
    
    - name: Download Bridge CLI
      run: |
        # Download Bridge CLI from Black Duck repository
        curl -fLsS -o bridge.zip https://repo.blackduck.com/bds-integrations-release/com/blackduck/integration/bridge-cli/latest/bridge-cli-linux64.zip
        
        unzip bridge.zip
        chmod +x bridge-cli-linux64
        
        # Verify Bridge CLI
        ./bridge-cli-linux64 --version
    
    - name: Run Polaris SAST Scan
      env:
        POLARIS_SERVER_URL: ${{ secrets.POLARIS_SERVER_URL }}
        POLARIS_ACCESS_TOKEN: ${{ secrets.POLARIS_ACCESS_TOKEN }}
        BRIDGE_POLARIS_PROJECT_NAME: ${{ github.repository }}
        BRIDGE_POLARIS_BRANCH_NAME: ${{ github.ref_name }}
      run: |
        # Run Bridge CLI with Polaris
        ./bridge-cli-linux64 \
          --stage polaris \
          --verbose \
          --diagnostics \
          --polaris.project.name="$BRIDGE_POLARIS_PROJECT_NAME" \
          --polaris.branch.name="$BRIDGE_POLARIS_BRANCH_NAME"
        
        # Bridge CLI automatically:
        # 1. Detects coverity.yaml in project root
        # 2. Calls Coverity Thin Client with your compiler config
        # 3. Uploads results to Polaris
    
    - name: Upload Bridge CLI Logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bridge-cli-logs
        path: |
          .bridge/
          **/*.log
