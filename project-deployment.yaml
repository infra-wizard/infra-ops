apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-service
  namespace: kepler-app-dev
  labels:
    app: project-service
    argocd.argoproj.io/instance: project-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project-service
  template:
    metadata:
      labels:
        app: project-service
      annotations:
        pyroscope.io/scrape: "true"
        pyroscope.io/application-name: "project-service"
        pyroscope.io/profile-cpu-enabled: "true"
        pyroscope.io/profile-mem-enabled: "true"
        vault.hashicorp.com/agent-init-first: "true"
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-secret-cds-api-key.yaml: "kv/customer-data-service/client/quality-flow/api-key"
        vault.hashicorp.com/agent-inject-secret-env.properties: "secret/kepler-app/env"
        vault.hashicorp.com/agent-inject-template-cds-api-key.yaml: |
          {{- with secret "kv/customer-data-service/client/quality-flow/api-key" -}}
          {{ .Data | toYAML }}
          {{- end }}
        vault.hashicorp.com/agent-inject-template-env.properties: |
          {{- with secret "secret/kepler-app/env" -}}
          {{- range $k, $v := .Data.data }}
          export {{ $k }}="{{ $v }}"
          {{- end }}
          {{- end }}
        vault.hashicorp.com/agent-limits-ephemeral: "1G"
        vault.hashicorp.com/auth-path: "auth/kubernetes"
        vault.hashicorp.com/log-level: "debug"
        vault.hashicorp.com/role: "kepler-app"
        vault.hashicorp.com/secret-volume-path: "/app/config"
        vault.hashicorp.com/service: "http://vault.adap:8200"
    spec:
      serviceAccountName: kepler-app
      volumes:
        - name: skywalking-agent
          emptyDir: {}
        - name: shared-data
          emptyDir: {}
      initContainers:
        - name: skywalking-agent-init
          image: apache/skywalking-java-agent:8.11.0-java11
          command:
            - /bin/sh
          args:
            - -c
            - cp -R /skywalking/agent /agent/
          volumeMounts:
            - name: skywalking-agent
              mountPath: /agent
          imagePullPolicy: IfNotPresent
        - name: download-pyroscope-agent
          image: curlimages/curl:latest
          command:
            - sh
            - -c
            - |
              curl -L -o /shared/pyroscope.jar https://github.com/pyroscope-io/pyroscope-java/releases/download/v0.13.0/pyroscope.jar
              ls -la /shared/pyroscope.jar
          volumeMounts:
            - name: shared-data
              mountPath: /shared
      containers:
        - name: project-service
          image: 411719562396.dkr.ecr.us-east-1.amazonaws.com/kepler-development/project-service:0388a63851e2ee395b85ccd1d3527b942cbb6ab0
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: JAVA_TOOL_OPTIONS
              value: "-javaagent:/skywalking/agent/skywalking-agent.jar -javaagent:/opt/pyroscope.jar"
            - name: SW_AGENT_NAME
              value: project-service
            - name: SW_AGENT_COLLECTOR_BACKEND_SERVICES
              value: skywalking-oap.kepler-infra:11800
            - name: PYROSCOPE_APPLICATION_NAME
              value: "project-service"
            - name: PYROSCOPE_SERVER_ADDRESS
              value: "http://pyroscope.observability.svc.cluster.local:4040"
            - name: PYROSCOPE_FORMAT
              value: "jfr"
            - name: PYROSCOPE_PROFILER_EVENT
              value: "itimer"
            - name: PYROSCOPE_PROFILER_ALLOC
              value: "512k"
            - name: PYROSCOPE_PROFILER_LOCK
              value: "10ms"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: PYROSCOPE_TAGS
              value: "pod=$(POD_NAME),namespace=$(POD_NAMESPACE),node=$(NODE_NAME),environment=dev"
            - name: JAVA_OPTS
              value: "-Xms512m -Xmx1g -XX:+UseG1GC"
          resources:
            limits:
              cpu: "1"
              memory: "2G"
            requests:
              cpu: "65m"
              memory: "2G"
          volumeMounts:
            - name: shared-data
              mountPath: /opt
            - name: skywalking-agent
              mountPath: /skywalking
          livenessProbe:
            httpGet:
              path: /project/actuator/health/liveness
              port: http
          readinessProbe:
            httpGet:
              path: /project/actuator/health/readiness
              port: http
          startupProbe:
            httpGet:
              path: /project/actuator/health/liveness
              port: http
            periodSeconds: 5
            failureThreshold: 120
          imagePullPolicy: IfNotPresent
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
