name: Build Workflow

on:
  workflow_dispatch:
    inputs:
      CI_INPUT_C:
        description: 'Hint for which CICD stages should run'
        required: true
        type: choice
        default: 'default'
        options:
          - 'default'
          - 'develop'
          - 'main'
          - 'release/'
          - 'ci/docker-esw-a35-sdk/'
          - 'ci/docker-esw/'
          - 'ci/docker-nginx-yocto/'
          - 'ci/imx-linux-kirkstone/'
          - 'ci/parshall-a35/'
          - 'ci/parshall-mfg/'
          - 'ci/yocto-imx-kirkstone/'
          - 'ci/yocto-imx/'
      
      build_yocto_kirkstone:
        description: 'Build Yocto Kirkstone'
        required: false
        type: boolean
        default: true

jobs:
  PreFlightCheck:
    runs-on: ReleaseRunner1
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Test git & Docker Connectivity
        run: |
          docker system info
          git diff --check
          ./script/test-connectivity.bash
      
      - name: Clean
        run: |
          ./script/setup-git-clean.bash

  # Parallel stage 1: docker-esw
  docker-esw:
    runs-on: ReleaseRunner1
    needs: PreFlightCheck
    if: |
      always() &&
      (needs.PreFlightCheck.result == 'success') &&
      (github.ref == 'refs/heads/ci/docker-esw' ||
       github.ref == 'refs/heads/develop' ||
       inputs.CI_INPUT_C == 'ci/docker-esw/' ||
       inputs.CI_INPUT_C == 'develop' ||
       inputs.CI_INPUT_C == 'release/' ||
       contains(github.event.head_commit.modified, 'projects/docker-esw/'))
    
    env:
      AZ_SP: ${{ secrets.ACR_LINUXSDK }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Build docker-esw
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ./projects/docker-esw/script/cibuild
        continue-on-error: true

  # Parallel stage 2: docker-esw-a35-sdk
  docker-esw-a35-sdk:
    runs-on: ReleaseRunner1
    needs: PreFlightCheck
    if: |
      always() &&
      (needs.PreFlightCheck.result == 'success') &&
      (github.ref == 'refs/heads/ci/docker-esw-a35-sdk' ||
       github.ref == 'refs/heads/develop' ||
       inputs.CI_INPUT_C == 'ci/docker-esw-a35-sdk/' ||
       inputs.CI_INPUT_C == 'develop' ||
       inputs.CI_INPUT_C == 'release/' ||
       contains(github.event.head_commit.modified, 'utils/docker-esw-a35-sdk/'))
    
    env:
      AZ_SP: ${{ secrets.ACR_LINUXSDK }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Build docker-esw-a35-sdk
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ./utils/docker-esw-a35-sdk/script/cibuild
        continue-on-error: true

  # Parallel stage 3: docker-nginx-yocto
  docker-nginx-yocto:
    runs-on: ReleaseRunner1
    needs: PreFlightCheck
    if: |
      always() &&
      (needs.PreFlightCheck.result == 'success') &&
      (github.ref == 'refs/heads/ci/docker-nginx-yocto' ||
       github.ref == 'refs/heads/develop' ||
       inputs.CI_INPUT_C == 'ci/docker-nginx-yocto/' ||
       inputs.CI_INPUT_C == 'develop' ||
       inputs.CI_INPUT_C == 'release/' ||
       contains(github.event.head_commit.modified, 'utils/docker-nginx-yocto/'))
    
    env:
      AZ_SP: ${{ secrets.ACR_LINUXSDK }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Build docker-nginx-yocto
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ./utils/docker-nginx-yocto/script/cibuild
        continue-on-error: true

  # Yocto IMX stage (from previous response)
  yocto-imx:
    runs-on: ReleaseRunner1
    needs: PreFlightCheck
    if: |
      always() &&
      (needs.PreFlightCheck.result == 'success') &&
      (github.ref == 'refs/heads/ci/parshall-a35' ||
       github.ref == 'refs/heads/ci/parshall-mfg' ||
       github.ref == 'refs/heads/ci/yocto-imx-kirkstone' ||
       github.ref == 'refs/heads/ci/yocto-imx' ||
       inputs.CI_INPUT_C == 'ci/parshall-a35/' ||
       inputs.CI_INPUT_C == 'ci/parshall-mfg/' ||
       inputs.CI_INPUT_C == 'ci/yocto-imx-kirkstone/' ||
       inputs.CI_INPUT_C == 'ci/yocto-imx/')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: yocto-imx-kirkstone
        if: |
          github.ref == 'refs/heads/ci/yocto-imx-kirkstone' ||
          inputs.CI_INPUT_C == 'ci/yocto-imx-kirkstone/'
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ./projects/yocto-imx-kirkstone/script/cibuild-docker-kas-imx.bash
        continue-on-error: true
      
      - name: Archive yocto-imx-kirkstone artifacts
        if: |
          github.ref == 'refs/heads/ci/yocto-imx-kirkstone' ||
          inputs.CI_INPUT_C == 'ci/yocto-imx-kirkstone/'
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: yocto-imx-kirkstone-build-${{ github.run_number }}
          path: |
            yocto-imx/build/tmp/deploy/images/*/*.raucb
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.manifest
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.tar.*
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.wic*
            yocto-imx/build/tmp/deploy/images/*/*.testdata.json
            yocto-imx/build/tmp/deploy/images/*/*zip
            yocto-imx/build/tmp/deploy/images/*/Image--*
            yocto-imx/build/tmp/deploy/images/*/imx-boot-*bin*
            yocto-imx/build/tmp/deploy/sdk/**
          follow-symlinks: false
          retention-days: 30
          if-no-files-found: warn

  # Parshall A35 stage
  parshall-a35:
    runs-on: ReleaseRunner1
    needs: PreFlightCheck
    if: |
      always() &&
      (needs.PreFlightCheck.result == 'success') &&
      (github.ref == 'refs/heads/ci/parshall-a35' ||
       inputs.CI_INPUT_C == 'ci/parshall-a35/')
    
    env:
      AP_BUILD_TARGET: "ap-bundle-parshall-image-test ap-bundle-parshall-image-test-dev"
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Build parshall-a35
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ./projects/yocto-imx-kirkstone/script/cibuild-docker-kas-imx.bash
        continue-on-error: true
      
      - name: Archive parshall-a35 artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: parshall-a35-build-${{ github.run_number }}
          path: |
            yocto-imx/build/tmp/deploy/images/*/*.raucb
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.manifest
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.tar.*
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.wic*
            yocto-imx/build/tmp/deploy/images/*/*.testdata.json
            yocto-imx/build/tmp/deploy/images/*/*zip
            yocto-imx/build/tmp/deploy/images/*/Image--*
            yocto-imx/build/tmp/deploy/images/*/imx-boot-*bin*
            yocto-imx/build/tmp/deploy/sdk/**
          follow-symlinks: false
          retention-days: 30
          if-no-files-found: warn

  # Parshall MFG stage
  parshall-mfg:
    runs-on: ReleaseRunner1
    needs: PreFlightCheck
    if: |
      always() &&
      (needs.PreFlightCheck.result == 'success') &&
      (github.ref == 'refs/heads/ci/parshall-mfg' ||
       inputs.CI_INPUT_C == 'ci/parshall-mfg/')
    
    env:
      AP_BUILD_TARGET: "ap-uuu-u-boot ap-uuu-initrd ap-uuu-parshall-image-test"
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add GitHub to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
      
      - name: Build parshall-mfg
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          ./projects/yocto-imx-kirkstone/script/cibuild-docker-kas-imx.bash
        continue-on-error: true
      
      - name: Archive parshall-mfg artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: parshall-mfg-build-${{ github.run_number }}
          path: |
            yocto-imx/build/tmp/deploy/images/*/*.raucb
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.manifest
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.tar.*
            yocto-imx/build/tmp/deploy/images/*/*.rootfs.wic*
            yocto-imx/build/tmp/deploy/images/*/*.testdata.json
            yocto-imx/build/tmp/deploy/images/*/*zip
            yocto-imx/build/tmp/deploy/images/*/Image--*
            yocto-imx/build/tmp/deploy/images/*/imx-boot-*bin*
            yocto-imx/build/tmp/deploy/sdk/**
          follow-symlinks: false
          retention-days: 30
          if-no-files-found: warn
