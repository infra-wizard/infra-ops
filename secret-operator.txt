helm repo add external-secrets https://charts.external-secrets.io
helm repo update
helm install external-secrets external-secrets/external-secrets \
  -n external-secrets-system \
  --create-namespace


export APPLICATION_NAME="external-secrets-app"
export SERVICE_ACCOUNT_NAMESPACE="default"
export SERVICE_ACCOUNT_NAME="workload-identity-sa"
export SERVICE_ACCOUNT_ISSUER="<your-aks-oidc-issuer-url>"

# Create service account
azwi serviceaccount create phase sa \
  --aad-application-name "${APPLICATION_NAME}" \
  --service-account-namespace "${SERVICE_ACCOUNT_NAMESPACE}" \
  --service-account-name "${SERVICE_ACCOUNT_NAME}"

# Create federated identity credential
azwi serviceaccount create phase federated-identity \
  --aad-application-name "${APPLICATION_NAME}" \
  --service-account-namespace "${SERVICE_ACCOUNT_NAMESPACE}" \
  --service-account-name "${SERVICE_ACCOUNT_NAME}" \
  --service-account-issuer-url "${SERVICE_ACCOUNT_ISSUER}"


# Get the kubelet identity object ID
KUBELET_IDENTITY_OBJECT_ID=$(az aks show \
  --resource-group <AKS_CLUSTER_RG_NAME> \
  --name <AKS_CLUSTER_NAME> \
  --query 'identityProfile.kubeletidentity.objectId' -o tsv)

# Set Key Vault policy (minimum required: Get permissions)
az keyvault set-policy \
  --name <key-vault-name> \
  --object-id "$KUBELET_IDENTITY_OBJECT_ID" \
  --certificate-permissions get \
  --secret-permissions get


# Get the kubelet identity object ID
KUBELET_IDENTITY_OBJECT_ID=$(az aks show \
  --resource-group <AKS_CLUSTER_RG_NAME> \
  --name <AKS_CLUSTER_NAME> \
  --query 'identityProfile.kubeletidentity.objectId' -o tsv)

# Set Key Vault policy (minimum required: Get permissions)
az keyvault set-policy \
  --name <key-vault-name> \
  --object-id "$KUBELET_IDENTITY_OBJECT_ID" \
  --certificate-permissions get \
  --secret-permissions get


apiVersion: v1
kind: ServiceAccount
metadata:
  name: workload-identity-sa
  namespace: default
  annotations:
    azure.workload.identity/client-id: <your-client-id>
    azure.workload.identity/tenant-id: <your-tenant-id>
---
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: azure-store
  namespace: default
spec:
  provider:
    azurekv:
      authType: WorkloadIdentity
      vaultUrl: "https://<key-vault-name>.vault.azure.net"
      serviceAccountRef:
        name: workload-identity-sa
