name: NAnt Build Workflow

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Download and install NAnt 0.92
        shell: powershell
        run: |
          $ErrorActionPreference = "Stop"
          
          # Use direct mirror URLs with fallback options
          $nant_urls = @(
            "https://downloads.sourceforge.net/project/nant/nant/0.92/nant-0.92-bin.zip",
            "https://master.dl.sourceforge.net/project/nant/nant/0.92/nant-0.92-bin.zip",
            "https://sourceforge.net/projects/nant/files/nant/0.92/nant-0.92-bin.zip/download"
          )
          $nant_zip = "$env:TEMP\nant.zip"
          $nant_path = "C:\nant"
          $expectedMinSize = 2000000  # NAnt archive should be at least 2MB
          
          $downloaded = $false
          foreach ($nant_url in $nant_urls) {
            Write-Host "Attempting to download NAnt from $nant_url..."
            try {
              # Use curl for more reliable downloads with progress and redirects
              curl.exe -L -o $nant_zip $nant_url --retry 3 --retry-delay 5 --max-time 300
              
              # Verify the file was downloaded
              if (Test-Path $nant_zip) {
                $fileSize = (Get-Item $nant_zip).Length
                Write-Host "Downloaded file size: $fileSize bytes"
                
                if ($fileSize -gt $expectedMinSize) {
                  Write-Host "Download successful!"
                  $downloaded = $true
                  break
                } else {
                  Write-Host "Downloaded file is too small ($fileSize bytes), trying next URL..."
                  Remove-Item $nant_zip -Force -ErrorAction SilentlyContinue
                }
              }
            }
            catch {
              Write-Host "Failed to download from $nant_url : $_"
              Remove-Item $nant_zip -Force -ErrorAction SilentlyContinue
            }
          }
          
          if (-not $downloaded) {
            throw "Failed to download NAnt archive from all available sources"
          }
          
          Write-Host "Creating NAnt directory at $nant_path..."
          New-Item -ItemType Directory -Path $nant_path -Force | Out-Null
          
          Write-Host "Expanding NAnt archive..."
          try {
            Expand-Archive -Path $nant_zip -DestinationPath $nant_path -Force -ErrorAction Stop
          }
          catch {
            Write-Host "Error with Expand-Archive: $_"
            throw "Failed to extract NAnt archive. The downloaded file may be corrupted."
          }
          
          Write-Host "Setting environment variable for NAnt..."
          $nantBinPath = "$nant_path\nant-0.92\bin"
          
          # Verify the bin directory exists
          if (-not (Test-Path $nantBinPath)) {
            throw "NAnt bin directory not found at $nantBinPath"
          }
          
          Add-Content -Path $env:GITHUB_PATH -Value $nantBinPath
          Write-Host "NAnt installation completed successfully"
          
          # Clean up zip file
          Remove-Item $nant_zip -Force -ErrorAction SilentlyContinue

      - name: Verify NAnt installation
        run: nant.exe -version
      
      - name: Run NAnt build
        run: nant.exe
        # Add your specific build target if needed:
        # run: nant.exe your-target-name
