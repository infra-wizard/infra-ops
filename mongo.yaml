# MongoDB Deployment for Diffy Application
# This includes all necessary Kubernetes resources

---
# MongoDB Service
apiVersion: v1
kind: Service
metadata:
  name: diffy-mongo-service
  namespace: default
  labels:
    app: diffy-mongo
spec:
  selector:
    app: diffy-mongo
  ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
      protocol: TCP
  type: ClusterIP

---
# MongoDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: diffy-mongo
  namespace: default
  labels:
    app: diffy-mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: diffy-mongo
  template:
    metadata:
      labels:
        app: diffy-mongo
    spec:
      containers:
      - name: mongodb
        image: mongo:5.0.6
        ports:
        - containerPort: 27017
          name: mongodb
        env:
        - name: MONGO_INITDB_DATABASE
          value: "diffy"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-pvc

---
# PersistentVolumeClaim for MongoDB data
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  # For EKS, use gp2 or gp3
  # For AKS, use default or managed-premium
  storageClassName: gp2  # Change to "default" for AKS

---
# Optional: ConfigMap for MongoDB configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
  namespace: default
data:
  mongod.conf: |
    storage:
      dbPath: /data/db
    net:
      port: 27017
      bindIp: 0.0.0.0
    systemLog:
      destination: file
      path: /var/log/mongodb/mongod.log
      logAppend: true
    processManagement:
      fork: false
