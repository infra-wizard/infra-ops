alloy:
  configMap:
    content: |
      // Alloy configuration for collecting metrics, logs, and traces
      // and forwarding them to Prometheus, Loki, and Tempo

      logging {
        level  = "info"
        format = "logfmt"
      }

      // Kubernetes discovery for pods, nodes, services, etc.
      discovery.kubernetes "pods" {
        role = "pod"
      }

      discovery.kubernetes "nodes" {
        role = "node"
      }

      discovery.kubernetes "services" {
        role = "service"
      }

      discovery.kubernetes "endpoints" {
        role = "endpoints"
      }

      discovery.kubernetes "endpointslices" {
        role = "endpointslice"
      }

      discovery.kubernetes "ingresses" {
        role = "ingress"
      }

      // Prometheus remote write configuration
      prometheus.remote_write "prometheus" {
        endpoint {
          url = "http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090/api/v1/write"
        }
      }

      // Loki client configuration
      loki.write "loki" {
        endpoint {
          url = "http://loki-gateway.monitoring.svc.cluster.local:80/loki/api/v1/push"
        }
      }

      // Tempo client configuration
      otelcol.exporter.otlp "tempo" {
        client {
          endpoint = "tempo.observability.svc.cluster.local:4317"
          tls {
            insecure = true
          }
        }
      }

      // Metrics collection from Kubernetes pods
      prometheus.scrape "pods" {
        targets    = discovery.kubernetes.pods.targets
        scrape_interval = "30s"
        metrics_path = "/metrics"
        forward_to = [prometheus.remote_write.prometheus.receiver]
      }

      // Metrics collection from Kubernetes nodes
      prometheus.scrape "nodes" {
        targets    = discovery.kubernetes.nodes.targets
        scrape_interval = "30s"
        metrics_path = "/metrics"
        forward_to = [prometheus.remote_write.prometheus.receiver]
      }

      // Metrics collection from Kubernetes services
      prometheus.scrape "services" {
        targets    = discovery.kubernetes.services.targets
        scrape_interval = "30s"
        metrics_path = "/metrics"
        forward_to = [prometheus.remote_write.prometheus.receiver]
      }

      // Log collection from Kubernetes pods
      loki.source.kubernetes "pods" {
        targets = discovery.kubernetes.pods.targets
        forward_to = [loki.write.loki.receiver]
      }

      // Log collection from Kubernetes nodes
      loki.source.kubernetes "nodes" {
        targets = discovery.kubernetes.nodes.targets
        forward_to = [loki.write.loki.receiver]
      }

      // Alloy's own metrics
      prometheus.scrape "alloy_metrics" {
        targets = [{"__address__" = "localhost:12345"}]
        scrape_interval = "15s"
        metrics_path = "/metrics"
        forward_to = [prometheus.remote_write.prometheus.receiver]
      }
